{"ast":null,"code":"var _jsxFileName = \"/Users/dkhetawat/Desktop/react-app-code/aem-guides-wknd-graphql-main/react-app/src/components/Contact.js\";\n\n/*\nCopyright 2022 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport CurrencyFormat from 'react-currency-format';\nimport backIcon from \"../images/icon-close.svg\";\nimport Error from './Error';\nimport Loading from './Loading';\nimport { mapJsonRichText } from '../utils/renderRichText';\nimport './Contact.scss';\nimport { getAllContact } from '../api/persistedQueries';\nimport LocaleContext from '../LocaleContext';\nimport { useContext } from \"react\";\n\nfunction Contact() {\n  // params hook from React router\n  const {\n    slug\n  } = useParams();\n  const navigate = useNavigate();\n  const [response, setResponse] = useState();\n  const {\n    locale\n  } = useContext(LocaleContext);\n  console.log(\"localecontact\", locale);\n  useEffect(() => {\n    // set response to null on change\n    setResponse();\n    getAllContact(locale).then(response => setResponse(response));\n  }, [slug]); //If query response is null then return a loading icon...\n\n  if (!response) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 26\n    }\n  }); //If there is an error with the GraphQL query\n\n  if (response && response.errors) return /*#__PURE__*/React.createElement(Error, {\n    errorMessage: response.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 44\n    }\n  }); //Set adventure properties variable based on graphQL response\n\n  const currentProduct = getFooter(response); // set references of current adventure\n\n  const references = response.data.contactList._references; //Must have title, path, and image\n\n  if (!currentProduct) {\n    return /*#__PURE__*/React.createElement(NoContactFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FooterRender, Object.assign({}, currentProduct, {\n    references: references,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction FooterRender({\n  contactUsHeading,\n  contactUsAddress,\n  contactUsDescription\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \" \", contactUsHeading, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \" \", contactUsAddress, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \" \", mapJsonRichText(contactUsDescription.json), \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), \" \");\n}\n\nfunction NoContactFound() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Error, {\n    errorMessage: \"Missing data, footer could not be rendered.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }));\n}\n/**\n * Helper function to get the first adventure from the response\n * @param {*} response \n */\n\n\nfunction getFooter(response) {\n  if (response && response.data && response.data.contactList && response.data.contactList.items) {\n    // expect there only to be a single adventure in the array\n    if (response.data.contactList.items.length === 1) {\n      return response.data.contactList.items[0];\n    } else {\n      return response.data.contactList.items[0];\n    }\n  }\n\n  return undefined;\n}\n/*\n\n*/\n\n/**\n * Example of using a custom render for in-line references in a multi line field\n */\n\n/*\nfunction customRenderOptions(references) {\n  const renderReference = {\n     // node contains merged properties of the in-line reference and _references object\n     'ImageRef': (node) => {\n         // when __typename === ImageRef\n        return <img src={node._path} alt={'in-line reference'} /> \n     },\n     'AdventureModel': (node) => {\n         // when __typename === AdventureModel\n         return <Link to={`/product:${node.slug}`}>{`${node.title}: ${node.price}`}</Link>;\n     }\n };\n  return {\n     nodeMap: {\n         'reference': (node, children) => {\n              // variable for reference in _references object\n             let reference;\n             \n             // asset reference\n             if(node.data.path) {\n                 // find reference based on path\n                 reference = references.find( ref => ref._path === node.data.path);\n             }\n             // Fragment Reference\n             if(node.data.href) {\n                 // find in-line reference within _references array based on href and _path properties\n                 reference = references.find( ref => ref._path === node.data.href);\n             }\n              // if reference found return render method of it\n             return reference ? renderReference[reference.__typename]({...reference, ...node}) : null;\n         }\n     },\n };\n}\n*/\n\n\nexport default Contact;","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useParams","CurrencyFormat","Error","Loading","mapJsonRichText","getAllContact","LocaleContext","useContext","Contact","slug","navigate","response","setResponse","locale","console","log","then","errors","currentProduct","getFooter","references","data","contactList","_references","FooterRender","contactUsHeading","contactUsAddress","contactUsDescription","json","NoContactFound","items","length","undefined"],"sources":["/Users/dkhetawat/Desktop/react-app-code/aem-guides-wknd-graphql-main/react-app/src/components/Contact.js"],"sourcesContent":["/*\nCopyright 2022 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams} from \"react-router-dom\";\nimport CurrencyFormat from 'react-currency-format';\nimport backIcon from '../images/icon-close.svg';\nimport Error from './Error';\nimport Loading from './Loading';\nimport { mapJsonRichText } from '../utils/renderRichText';\nimport './Contact.scss';\nimport { getAllContact } from '../api/persistedQueries';\nimport LocaleContext from '../LocaleContext';\nimport { useContext } from \"react\";\n\nfunction Contact() {\n\n    // params hook from React router\n    const { slug } = useParams();\n    const navigate = useNavigate();\n    const [response, setResponse] = useState();\n    const { locale } = useContext(LocaleContext);\n                    console.log(\"localecontact\",locale);\n    useEffect(() => {\n        // set response to null on change\n        setResponse();\n        getAllContact(locale).then(response => setResponse(response));\n    }, [slug]);\n    \n\n    //If query response is null then return a loading icon...\n    if(!response) return <Loading />;\n\n    //If there is an error with the GraphQL query\n    if(response && response.errors) return <Error errorMessage={response.errors} />;\n\n\n    //Set adventure properties variable based on graphQL response\n    const currentProduct = getFooter(response);\n    \n    // set references of current adventure\n    const references = response.data.contactList._references;\n\n    //Must have title, path, and image\n    if( !currentProduct) {\n      return <NoContactFound />;\n    }\n    \n    return (<div className=\"product-detail\">\n        <FooterRender {...currentProduct} references={references}/>\n    </div>);\n}\n\nfunction FooterRender({contactUsHeading,contactUsAddress,contactUsDescription}) {\n\n    return (<>\n                <div> {contactUsHeading} </div> <br/>\n                <div> {contactUsAddress} </div> <br/>\n                <div> {mapJsonRichText(contactUsDescription.json)} </div>\n                <hr/> </>\n    );\n}\n\nfunction NoContactFound() {\n    return (\n    <div className=\"product-detail\">\n        <Error errorMessage=\"Missing data, footer could not be rendered.\" />\n  </div>\n  );\n}\n\n/**\n * Helper function to get the first adventure from the response\n * @param {*} response \n */\nfunction getFooter(response) {\n\n    if(response && response.data && response.data.contactList && response.data.contactList.items) {\n        // expect there only to be a single adventure in the array\n        if(response.data.contactList.items.length === 1) {\n            return response.data.contactList.items[0];\n        } else {return response.data.contactList.items[0]}\n    }\n    return undefined;\n}\n/*\n\n*/\n/**\n * Example of using a custom render for in-line references in a multi line field\n *//*\n\nfunction customRenderOptions(references) {\n\n    const renderReference = {\n        // node contains merged properties of the in-line reference and _references object\n        'ImageRef': (node) => {\n            // when __typename === ImageRef\n           return <img src={node._path} alt={'in-line reference'} /> \n        },\n        'AdventureModel': (node) => {\n            // when __typename === AdventureModel\n            return <Link to={`/product:${node.slug}`}>{`${node.title}: ${node.price}`}</Link>;\n        }\n    };\n\n    return {\n        nodeMap: {\n            'reference': (node, children) => {\n\n                // variable for reference in _references object\n                let reference;\n                \n                // asset reference\n                if(node.data.path) {\n                    // find reference based on path\n                    reference = references.find( ref => ref._path === node.data.path);\n                }\n                // Fragment Reference\n                if(node.data.href) {\n                    // find in-line reference within _references array based on href and _path properties\n                    reference = references.find( ref => ref._path === node.data.href);\n                }\n\n                // if reference found return render method of it\n                return reference ? renderReference[reference.__typename]({...reference, ...node}) : null;\n            }\n        },\n    };\n}\n*/\n\n\n\nexport default Contact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}