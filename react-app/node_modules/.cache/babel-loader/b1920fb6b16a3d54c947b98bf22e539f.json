{"ast":null,"code":"/*\nCopyright 2022 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\n\n/**\n * persistedQueries.js - provides a wrapper utility of persisted queries that are expected to be available on the AEM environment\n */\nimport { aemHeadlessClient, mapErrors } from \"./headlessClient\";\n/**\n * Queries a list of all Adventures using the persisted path \"mec/all-products-by-locale\"\n * @returns {data, errors}\n */\n\nexport const getAllProducts = async function (locale) {\n  const queryVariables = {\n    'locale': locale\n  };\n  return executePersistedQuery('mec/all-products-footer-by-locale', queryVariables);\n};\nexport const getAllContact = async function (locale) {\n  const queryVariables = {\n    'locale': locale\n  };\n  return executePersistedQuery('mec/all-contact-by-locale', queryVariables);\n};\nexport const getAllFooter = async function (locale) {\n  const queryVariables = {\n    'locale': locale\n  };\n  return executePersistedQuery('mec/all-footer-by-locale', queryVariables);\n};\n/**\n * Queries a single adventure based on its slug to a content fragment\n * uses persisted path 'mec/product-by-slug-by-locale'\n * @param {*} adventurePath \n * @returns \n */\n\nexport const getProductBySlug = async function (productSlug, locale) {\n  const queryVariables = {\n    'name': productSlug,\n    'locale': locale\n  };\n  return executePersistedQuery('mec/product-by-slug-by-locale', queryVariables);\n};\n/**\n * Filters a list of adventures by activity \n * using the persisted path 'wknd-shared/ec/product-by-category-by-locale'\n * @param {*} activityType \n * @returns \n */\n\nexport const getProductByCategory = async function (productCategory, locale) {\n  const queryVariables = {\n    'name': productCategory,\n    'locale': locale\n  }; // expected query variables\n\n  return executePersistedQuery('mec/products-and-footer-by-category-locale', queryVariables);\n};\n/**\n * Uses the AEM Headless SDK to execute a query besed on a persistedQueryPath and optional query variables\n * @param {*} persistedQueryPath \n * @param {*} queryVariables \n * @returns \n */\n\nconst executePersistedQuery = async function (persistedQueryPath, queryVariables) {\n  let data;\n  let errors;\n\n  try {\n    // AEM GraphQL queries are asynchronous, either await their return or use Promise-based .then(..) { ... } syntax\n    const response = await aemHeadlessClient.runPersistedQuery(persistedQueryPath, queryVariables); // The GraphQL data is stored on the response's data field\n\n    data = response.data;\n    errors = response.errors ? mapErrors(response.errors) : undefined;\n  } catch (e) {\n    console.error(e.toJSON());\n    errors = e;\n  }\n\n  return {\n    data,\n    errors\n  };\n};","map":{"version":3,"names":["aemHeadlessClient","mapErrors","getAllProducts","locale","queryVariables","executePersistedQuery","getAllContact","getAllFooter","getProductBySlug","productSlug","getProductByCategory","productCategory","persistedQueryPath","data","errors","response","runPersistedQuery","undefined","e","console","error","toJSON"],"sources":["/Users/dkhetawat/Desktop/react-app-code/aem-guides-wknd-graphql-main/react-app/src/api/persistedQueries.js"],"sourcesContent":["/*\nCopyright 2022 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\n\n/**\n * persistedQueries.js - provides a wrapper utility of persisted queries that are expected to be available on the AEM environment\n */\nimport { aemHeadlessClient , mapErrors} from \"./headlessClient\";\n\n/**\n * Queries a list of all Adventures using the persisted path \"mec/all-products-by-locale\"\n * @returns {data, errors}\n */\nexport const getAllProducts = async function(locale) {\n    const queryVariables = {'locale': locale};\n    return executePersistedQuery('mec/all-products-footer-by-locale', queryVariables);\n}\n\nexport const getAllContact = async function(locale) {\n    const queryVariables = {'locale': locale};\n    return executePersistedQuery('mec/all-contact-by-locale', queryVariables);\n}\n\nexport const getAllFooter = async function(locale) {\n    const queryVariables = {'locale': locale};\n    return executePersistedQuery('mec/all-footer-by-locale', queryVariables);\n}\n\n/**\n * Queries a single adventure based on its slug to a content fragment\n * uses persisted path 'mec/product-by-slug-by-locale'\n * @param {*} adventurePath \n * @returns \n */\n export const getProductBySlug = async function(productSlug, locale) {\n    const queryVariables = {'name': productSlug, 'locale': locale};\n    return executePersistedQuery('mec/product-by-slug-by-locale', queryVariables);\n}\n\n/**\n * Filters a list of adventures by activity \n * using the persisted path 'wknd-shared/ec/product-by-category-by-locale'\n * @param {*} activityType \n * @returns \n */\nexport const getProductByCategory = async function(productCategory,locale) {\n    const queryVariables = { 'name': productCategory,'locale': locale }; // expected query variables\n    return executePersistedQuery('mec/products-and-footer-by-category-locale', queryVariables);\n}\n\n\n/**\n * Uses the AEM Headless SDK to execute a query besed on a persistedQueryPath and optional query variables\n * @param {*} persistedQueryPath \n * @param {*} queryVariables \n * @returns \n */\n const executePersistedQuery = async function(persistedQueryPath, queryVariables) {\n\n    let data;\n    let errors;\n\n    try {\n        // AEM GraphQL queries are asynchronous, either await their return or use Promise-based .then(..) { ... } syntax\n        const response = await aemHeadlessClient.runPersistedQuery(persistedQueryPath, queryVariables);\n        // The GraphQL data is stored on the response's data field\n        data = response.data;\n        errors = response.errors ? mapErrors(response.errors) : undefined;\n    } catch (e) {\n        console.error(e.toJSON());\n        errors = e;\n    }\n\n    return {data, errors}; \n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAASA,iBAAT,EAA6BC,SAA7B,QAA6C,kBAA7C;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAG,gBAAeC,MAAf,EAAuB;EACjD,MAAMC,cAAc,GAAG;IAAC,UAAUD;EAAX,CAAvB;EACA,OAAOE,qBAAqB,CAAC,mCAAD,EAAsCD,cAAtC,CAA5B;AACH,CAHM;AAKP,OAAO,MAAME,aAAa,GAAG,gBAAeH,MAAf,EAAuB;EAChD,MAAMC,cAAc,GAAG;IAAC,UAAUD;EAAX,CAAvB;EACA,OAAOE,qBAAqB,CAAC,2BAAD,EAA8BD,cAA9B,CAA5B;AACH,CAHM;AAKP,OAAO,MAAMG,YAAY,GAAG,gBAAeJ,MAAf,EAAuB;EAC/C,MAAMC,cAAc,GAAG;IAAC,UAAUD;EAAX,CAAvB;EACA,OAAOE,qBAAqB,CAAC,0BAAD,EAA6BD,cAA7B,CAA5B;AACH,CAHM;AAKP;AACA;AACA;AACA;AACA;AACA;;AACC,OAAO,MAAMI,gBAAgB,GAAG,gBAAeC,WAAf,EAA4BN,MAA5B,EAAoC;EACjE,MAAMC,cAAc,GAAG;IAAC,QAAQK,WAAT;IAAsB,UAAUN;EAAhC,CAAvB;EACA,OAAOE,qBAAqB,CAAC,+BAAD,EAAkCD,cAAlC,CAA5B;AACH,CAHO;AAKR;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMM,oBAAoB,GAAG,gBAAeC,eAAf,EAA+BR,MAA/B,EAAuC;EACvE,MAAMC,cAAc,GAAG;IAAE,QAAQO,eAAV;IAA0B,UAAUR;EAApC,CAAvB,CADuE,CACF;;EACrE,OAAOE,qBAAqB,CAAC,4CAAD,EAA+CD,cAA/C,CAA5B;AACH,CAHM;AAMP;AACA;AACA;AACA;AACA;AACA;;AACC,MAAMC,qBAAqB,GAAG,gBAAeO,kBAAf,EAAmCR,cAAnC,EAAmD;EAE9E,IAAIS,IAAJ;EACA,IAAIC,MAAJ;;EAEA,IAAI;IACA;IACA,MAAMC,QAAQ,GAAG,MAAMf,iBAAiB,CAACgB,iBAAlB,CAAoCJ,kBAApC,EAAwDR,cAAxD,CAAvB,CAFA,CAGA;;IACAS,IAAI,GAAGE,QAAQ,CAACF,IAAhB;IACAC,MAAM,GAAGC,QAAQ,CAACD,MAAT,GAAkBb,SAAS,CAACc,QAAQ,CAACD,MAAV,CAA3B,GAA+CG,SAAxD;EACH,CAND,CAME,OAAOC,CAAP,EAAU;IACRC,OAAO,CAACC,KAAR,CAAcF,CAAC,CAACG,MAAF,EAAd;IACAP,MAAM,GAAGI,CAAT;EACH;;EAED,OAAO;IAACL,IAAD;IAAOC;EAAP,CAAP;AACH,CAjBA"},"metadata":{},"sourceType":"module"}