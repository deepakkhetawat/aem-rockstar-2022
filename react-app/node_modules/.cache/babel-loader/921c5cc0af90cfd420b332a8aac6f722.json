{"ast":null,"code":"var _jsxFileName = \"/Users/dkhetawat/Desktop/react-app-code/aem-guides-wknd-graphql-main/react-app/src/components/ProductDetail.js\";\n\n/*\nCopyright 2022 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport CurrencyFormat from 'react-currency-format';\nimport backIcon from \"../images/icon-close.svg\";\nimport Error from './Error';\nimport Loading from './Loading';\nimport { mapJsonRichText } from '../utils/renderRichText';\nimport './ProductDetail.scss';\nimport { getProductBySlug } from '../api/persistedQueries';\nimport LocaleContext from '../LocaleContext';\nimport { useContext } from \"react\";\n\nfunction ProductDetail() {\n  // params hook from React router\n  const {\n    slug\n  } = useParams();\n  const navigate = useNavigate();\n  const [response, setResponse] = useState();\n  const {\n    locale\n  } = useContext(LocaleContext);\n  useEffect(() => {\n    // set response to null on change\n    setResponse(); //parse the adventure slug from the substring\n\n    const productSlug = slug.substring(1); // execute persisted query based on the adventure slug\n\n    getProductBySlug(productSlug, locale).then(response => setResponse(response));\n  }, [slug]); //If query response is null then return a loading icon...\n\n  if (!response) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }\n  }); //If there is an error with the GraphQL query\n\n  if (response && response.errors) return /*#__PURE__*/React.createElement(Error, {\n    errorMessage: response.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 44\n    }\n  }); //Set adventure properties variable based on graphQL response\n\n  const currentProduct = getProduct(response); // set references of current adventure\n\n  const references = response.data.productList._references; //Must have title, path, and image\n\n  if (!currentProduct) {\n    return /*#__PURE__*/React.createElement(NoProductFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"product-detail-close-button\",\n    onClick: () => navigate(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"Backbutton-icon\",\n    src: backIcon,\n    alt: \"Return\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AdventureDetailRender, Object.assign({}, currentProduct, {\n    references: references,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction AdventureDetailRender({\n  productTitle,\n  productImage,\n  isProductNew,\n  productCategory,\n  productPrice,\n  productDescription\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"product-detail-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, productTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Activity\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, productTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, productTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Trip Length\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, productTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Group Size\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, productTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Difficulty\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, productTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-info-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyFormat, {\n    value: productPrice,\n    displayType: 'text',\n    thousandSeparator: true,\n    prefix: '$',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"product-detail-primaryimage\",\n    src: productImage._path,\n    alt: productTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \" \", mapJsonRichText(productDescription.json), \" \")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Itinerary\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), \" \");\n}\n\nfunction NoProductFound() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"product-detail-close-button\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"Backbutton-icon\",\n    src: backIcon,\n    alt: \"Return\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Error, {\n    errorMessage: \"Missing data, adventure could not be rendered.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }));\n}\n/**\n * Helper function to get the first adventure from the response\n * @param {*} response \n */\n\n\nfunction getProduct(response) {\n  if (response && response.data && response.data.productList && response.data.productList.items) {\n    // expect there only to be a single adventure in the array\n    if (response.data.productList.items.length === 1) {\n      return response.data.productList.items[0];\n    } else {\n      return response.data.productList.items[0];\n    }\n  }\n\n  return undefined;\n}\n/*\n\n*/\n\n/**\n * Example of using a custom render for in-line references in a multi line field\n */\n\n/*\nfunction customRenderOptions(references) {\n  const renderReference = {\n     // node contains merged properties of the in-line reference and _references object\n     'ImageRef': (node) => {\n         // when __typename === ImageRef\n        return <img src={node._path} alt={'in-line reference'} /> \n     },\n     'AdventureModel': (node) => {\n         // when __typename === AdventureModel\n         return <Link to={`/product:${node.slug}`}>{`${node.title}: ${node.price}`}</Link>;\n     }\n };\n  return {\n     nodeMap: {\n         'reference': (node, children) => {\n              // variable for reference in _references object\n             let reference;\n             \n             // asset reference\n             if(node.data.path) {\n                 // find reference based on path\n                 reference = references.find( ref => ref._path === node.data.path);\n             }\n             // Fragment Reference\n             if(node.data.href) {\n                 // find in-line reference within _references array based on href and _path properties\n                 reference = references.find( ref => ref._path === node.data.href);\n             }\n              // if reference found return render method of it\n             return reference ? renderReference[reference.__typename]({...reference, ...node}) : null;\n         }\n     },\n };\n}\n*/\n\n\nexport default ProductDetail;","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useParams","CurrencyFormat","Error","Loading","mapJsonRichText","getProductBySlug","LocaleContext","useContext","ProductDetail","slug","navigate","response","setResponse","locale","productSlug","substring","then","errors","currentProduct","getProduct","references","data","productList","_references","backIcon","AdventureDetailRender","productTitle","productImage","isProductNew","productCategory","productPrice","productDescription","_path","json","NoProductFound","items","length","undefined"],"sources":["/Users/dkhetawat/Desktop/react-app-code/aem-guides-wknd-graphql-main/react-app/src/components/ProductDetail.js"],"sourcesContent":["/*\nCopyright 2022 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams} from \"react-router-dom\";\nimport CurrencyFormat from 'react-currency-format';\nimport backIcon from '../images/icon-close.svg';\nimport Error from './Error';\nimport Loading from './Loading';\nimport { mapJsonRichText } from '../utils/renderRichText';\nimport './ProductDetail.scss';\nimport { getProductBySlug } from '../api/persistedQueries';\nimport LocaleContext from '../LocaleContext';\nimport { useContext } from \"react\";\n\nfunction ProductDetail() {\n\n    // params hook from React router\n    const { slug } = useParams();\n    const navigate = useNavigate();\n    const [response, setResponse] = useState();\n    const { locale } = useContext(LocaleContext);\n    useEffect(() => {\n        // set response to null on change\n        setResponse();\n        //parse the adventure slug from the substring\n        const productSlug = slug.substring(1);\n        // execute persisted query based on the adventure slug\n        getProductBySlug(productSlug, locale)\n            .then(response => setResponse(response));\n    }, [slug]);\n    \n\n    //If query response is null then return a loading icon...\n    if(!response) return <Loading />;\n\n    //If there is an error with the GraphQL query\n    if(response && response.errors) return <Error errorMessage={response.errors} />;\n\n\n    //Set adventure properties variable based on graphQL response\n    const currentProduct = getProduct(response);\n    \n    // set references of current adventure\n    const references = response.data.productList._references;\n\n    //Must have title, path, and image\n    if( !currentProduct) {\n      return <NoProductFound />;\n    }\n    \n    return (<div className=\"product-detail\">\n        <button className=\"product-detail-close-button\" onClick={() => navigate(-1)} >\n            <img className=\"Backbutton-icon\" src={backIcon} alt=\"Return\" />\n        </button>\n        <AdventureDetailRender {...currentProduct} references={references}/>\n    </div>);\n}\n\nfunction AdventureDetailRender({productTitle,\n                                productImage,\n                                isProductNew,\n                                productCategory,\n                                productPrice,\n                                productDescription}) {\n\n    return (<>\n            <h1 className=\"product-detail-title\">{productTitle}</h1>\n            <div className=\"product-detail-info\">\n                <div className=\"product-detail-info-label\">Activity</div>\n                <div className=\"product-detail-info-description\">{productTitle}</div>\n                <div className=\"product-detail-info-label\">Type</div>\n                <div className=\"product-detail-info-description\">{productTitle}</div>\n                <div className=\"product-detail-info-label\">Trip Length</div>\n                <div className=\"product-detail-info-description\">{productTitle}</div>\n                <div className=\"product-detail-info-label\">Group Size</div>\n                <div className=\"product-detail-info-description\">{productTitle}</div>\n                <div className=\"product-detail-info-label\">Difficulty</div>\n                <div className=\"product-detail-info-description\">{productTitle}</div>\n                <div className=\"product-detail-info-label\">Price</div>\n                <div className=\"product-detail-info-description\">\n                    <CurrencyFormat value={productPrice} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                </div>\n            </div>\n\n            <div className=\"product-detail-content\">\n                <img className=\"product-detail-primaryimage\"\n                    src={productImage._path} alt={productTitle} />\n            <div> {mapJsonRichText(productDescription.json)} </div>\n\n            </div>\n\n            <h2>Itinerary</h2>\n            <hr/> </>\n    );\n}\n\nfunction NoProductFound() {\n    return (\n    <div className=\"product-detail\">\n        <Link className=\"product-detail-close-button\" to={\"/\"}>\n            <img className=\"Backbutton-icon\" src={backIcon} alt=\"Return\" />\n        </Link>\n        <Error errorMessage=\"Missing data, adventure could not be rendered.\" />\n  </div>\n  );\n}\n\n/**\n * Helper function to get the first adventure from the response\n * @param {*} response \n */\nfunction getProduct(response) {\n\n    if(response && response.data && response.data.productList && response.data.productList.items) {\n        // expect there only to be a single adventure in the array\n        if(response.data.productList.items.length === 1) {\n            return response.data.productList.items[0];\n        } else {return response.data.productList.items[0]}\n    }\n    return undefined;\n}\n/*\n\n*/\n/**\n * Example of using a custom render for in-line references in a multi line field\n *//*\n\nfunction customRenderOptions(references) {\n\n    const renderReference = {\n        // node contains merged properties of the in-line reference and _references object\n        'ImageRef': (node) => {\n            // when __typename === ImageRef\n           return <img src={node._path} alt={'in-line reference'} /> \n        },\n        'AdventureModel': (node) => {\n            // when __typename === AdventureModel\n            return <Link to={`/product:${node.slug}`}>{`${node.title}: ${node.price}`}</Link>;\n        }\n    };\n\n    return {\n        nodeMap: {\n            'reference': (node, children) => {\n\n                // variable for reference in _references object\n                let reference;\n                \n                // asset reference\n                if(node.data.path) {\n                    // find reference based on path\n                    reference = references.find( ref => ref._path === node.data.path);\n                }\n                // Fragment Reference\n                if(node.data.href) {\n                    // find in-line reference within _references array based on href and _path properties\n                    reference = references.find( ref => ref._path === node.data.href);\n                }\n\n                // if reference found return render method of it\n                return reference ? renderReference[reference.__typename]({...reference, ...node}) : null;\n            }\n        },\n    };\n}\n*/\n\n\n\nexport default ProductDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}