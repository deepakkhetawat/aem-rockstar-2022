{"ast":null,"code":"/*\nCopyright 2022 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\n\n/**\n * persistedQueries.js - provides a wrapper utility of persisted queries that are expected to be available on the AEM environment\n */\nimport { aemHeadlessClient, mapErrors } from \"./headlessClient\";\n/**\n * Queries a list of all Adventures using the persisted path \"wknd-shared/adventures-all\"\n * @returns {data, errors}\n */\n\nexport const getAllProducts = async function () {\n  return executePersistedQuery(' mec/all-products-by-locale');\n};\nexport const getAllContact = async function () {\n  return executePersistedQuery('mec/all-contact');\n};\n/**\n * Queries a single adventure based on its slug to a content fragment\n * uses persisted path 'wknd-shared/adventure-by-slug'\n * @param {*} adventurePath \n * @returns \n */\n\nexport const getProductBySlug = async function (adventureSlug) {\n  const queryVariables = {\n    'name': adventureSlug\n  };\n  return executePersistedQuery('mec/product-by-slug', queryVariables);\n};\n/**\n * Filters a list of adventures by activity \n * using the persisted path 'wknd-shared/adventures-by-activity'\n * @param {*} activityType \n * @returns \n */\n\nexport const getProductByCategory = async function (activityType) {\n  const queryVariables = {\n    'name': activityType\n  }; // expected query variables\n\n  return executePersistedQuery('mec/product-by-category', queryVariables);\n};\n/**\n * Uses the AEM Headless SDK to execute a query besed on a persistedQueryPath and optional query variables\n * @param {*} persistedQueryPath \n * @param {*} queryVariables \n * @returns \n */\n\nconst executePersistedQuery = async function (persistedQueryPath, queryVariables) {\n  let data;\n  let errors;\n\n  try {\n    // AEM GraphQL queries are asynchronous, either await their return or use Promise-based .then(..) { ... } syntax\n    const response = await aemHeadlessClient.runPersistedQuery(persistedQueryPath, queryVariables); // The GraphQL data is stored on the response's data field\n\n    data = response.data;\n    errors = response.errors ? mapErrors(response.errors) : undefined;\n  } catch (e) {\n    console.error(e.toJSON());\n    errors = e;\n  }\n\n  return {\n    data,\n    errors\n  };\n};","map":{"version":3,"names":["aemHeadlessClient","mapErrors","getAllProducts","executePersistedQuery","getAllContact","getProductBySlug","adventureSlug","queryVariables","getProductByCategory","activityType","persistedQueryPath","data","errors","response","runPersistedQuery","undefined","e","console","error","toJSON"],"sources":["/Users/dkhetawat/Desktop/react-app-code/aem-guides-wknd-graphql-main/react-app/src/api/persistedQueries.js"],"sourcesContent":["/*\nCopyright 2022 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\n\n/**\n * persistedQueries.js - provides a wrapper utility of persisted queries that are expected to be available on the AEM environment\n */\nimport { aemHeadlessClient , mapErrors} from \"./headlessClient\";\n\n/**\n * Queries a list of all Adventures using the persisted path \"wknd-shared/adventures-all\"\n * @returns {data, errors}\n */\nexport const getAllProducts = async function() {\n    return executePersistedQuery(' mec/all-products-by-locale');\n}\n\nexport const getAllContact = async function() {\n    return executePersistedQuery('mec/all-contact');\n}\n\n\n/**\n * Queries a single adventure based on its slug to a content fragment\n * uses persisted path 'wknd-shared/adventure-by-slug'\n * @param {*} adventurePath \n * @returns \n */\n export const getProductBySlug = async function(adventureSlug) {\n    const queryVariables = {'name': adventureSlug};\n    return executePersistedQuery('mec/product-by-slug', queryVariables);\n}\n\n/**\n * Filters a list of adventures by activity \n * using the persisted path 'wknd-shared/adventures-by-activity'\n * @param {*} activityType \n * @returns \n */\nexport const getProductByCategory = async function(activityType) {\n    const queryVariables = { 'name': activityType }; // expected query variables\n    return executePersistedQuery('mec/product-by-category', queryVariables);\n}\n\n\n/**\n * Uses the AEM Headless SDK to execute a query besed on a persistedQueryPath and optional query variables\n * @param {*} persistedQueryPath \n * @param {*} queryVariables \n * @returns \n */\n const executePersistedQuery = async function(persistedQueryPath, queryVariables) {\n\n    let data;\n    let errors;\n\n    try {\n        // AEM GraphQL queries are asynchronous, either await their return or use Promise-based .then(..) { ... } syntax\n        const response = await aemHeadlessClient.runPersistedQuery(persistedQueryPath, queryVariables);\n        // The GraphQL data is stored on the response's data field\n        data = response.data;\n        errors = response.errors ? mapErrors(response.errors) : undefined;\n    } catch (e) {\n        console.error(e.toJSON());\n        errors = e;\n    }\n\n    return {data, errors}; \n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAASA,iBAAT,EAA6BC,SAA7B,QAA6C,kBAA7C;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAG,kBAAiB;EAC3C,OAAOC,qBAAqB,CAAC,6BAAD,CAA5B;AACH,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAG,kBAAiB;EAC1C,OAAOD,qBAAqB,CAAC,iBAAD,CAA5B;AACH,CAFM;AAKP;AACA;AACA;AACA;AACA;AACA;;AACC,OAAO,MAAME,gBAAgB,GAAG,gBAAeC,aAAf,EAA8B;EAC3D,MAAMC,cAAc,GAAG;IAAC,QAAQD;EAAT,CAAvB;EACA,OAAOH,qBAAqB,CAAC,qBAAD,EAAwBI,cAAxB,CAA5B;AACH,CAHO;AAKR;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,oBAAoB,GAAG,gBAAeC,YAAf,EAA6B;EAC7D,MAAMF,cAAc,GAAG;IAAE,QAAQE;EAAV,CAAvB,CAD6D,CACZ;;EACjD,OAAON,qBAAqB,CAAC,yBAAD,EAA4BI,cAA5B,CAA5B;AACH,CAHM;AAMP;AACA;AACA;AACA;AACA;AACA;;AACC,MAAMJ,qBAAqB,GAAG,gBAAeO,kBAAf,EAAmCH,cAAnC,EAAmD;EAE9E,IAAII,IAAJ;EACA,IAAIC,MAAJ;;EAEA,IAAI;IACA;IACA,MAAMC,QAAQ,GAAG,MAAMb,iBAAiB,CAACc,iBAAlB,CAAoCJ,kBAApC,EAAwDH,cAAxD,CAAvB,CAFA,CAGA;;IACAI,IAAI,GAAGE,QAAQ,CAACF,IAAhB;IACAC,MAAM,GAAGC,QAAQ,CAACD,MAAT,GAAkBX,SAAS,CAACY,QAAQ,CAACD,MAAV,CAA3B,GAA+CG,SAAxD;EACH,CAND,CAME,OAAOC,CAAP,EAAU;IACRC,OAAO,CAACC,KAAR,CAAcF,CAAC,CAACG,MAAF,EAAd;IACAP,MAAM,GAAGI,CAAT;EACH;;EAED,OAAO;IAACL,IAAD;IAAOC;EAAP,CAAP;AACH,CAjBA"},"metadata":{},"sourceType":"module"}